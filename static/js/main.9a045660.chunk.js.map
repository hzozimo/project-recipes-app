{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/mealIcon.svg","images/exploreIcon.svg","images/Myimage.png","serviceWorker.js","context/ContextRecipes.js","api/fetchCategories.js","api/fetchAreas.js","context/RecipesProvider.js","components/Button.js","components/Inputs.js","pages/Login.js","service/service.js","service/drinkservice.js","components/SearchBar.js","components/Header.js","components/Footer.js","Hooks/fetchInicialFoods.js","api/fetchFilterBtn.js","Hooks/fetchInicialFiters.js","components/FilterBar.js","components/Loading.js","pages/Comidas.js","Hooks/fetchInicialDrinks.js","pages/Bebidas.js","pages/Perfil.js","Hooks/fetchDetailsAndRecomendations.js","components/FavoriteFood.js","components/RecipeMealsButton.js","pages/DetalhesComida.js","components/RecipeDrinksButton.js","components/FavoriteDrink.js","pages/DetalhesBebida.js","pages/Explorar.js","pages/ExplorarComidas.js","pages/ExplorarBebidas.js","components/AreaBar.js","pages/ExplorarOrigem.js","Hooks/fetchFoodIngredients.js","pages/IngredientesComidas.js","Hooks/fetchDrinkIngredients.js","pages/IngredientesBebidas.js","Helpers/verifyIngredient.js","pages/InProgressBebidas.js","pages/InProgressComida.js","pages/ReceitasFeitas.js","pages/ReceitasFavoritas.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","ContextRecipes","createContext","categoriesOptions","meals","drinks","fetchCategories","type","a","tempType","FIVE_CATEGORYS","fetch","resultsJSON","json","results","slice","fetchAreas","fetchFilterAreas","area","RecipesProvider","children","useState","filter","setFilter","mealsCategories","setMealsCategories","drinksCategories","setDrinksCategories","currentFood","setCurrentFood","currentFoodIngredients","setCurrentFoodIngredients","mainIngredient","setMain","data","setData","dataDrink","setDataDrink","loading","setLoading","foodDetails","setFoodDetails","drinkDetails","setDrinkDetails","recomendations","setRecomendations","favorited","setFavorited","cocktails","loadInProgressRecipes","setLoadInProgressRecipes","foodIngredients","setFoodIngredients","drinkIngredients","setDrinkIngredients","currentValueFood","setCurrentValueFood","currentValueDrink","setCurrentValueDrink","areasFood","setAreasFood","useEffect","areasAPI","drinksCategoriesAPI","mealCategoriesAPI","fetchData","state","Provider","value","Button","className","label","onClick","datatestid","disabled","data-testid","defaultProps","Input","onChange","name","src","alt","htmlFor","Login","email","setEmail","password","setPassword","setDisabled","userEmail","test","length","history","useHistory","e","target","localStorage","setItem","JSON","stringify","push","radio","text","ingrediente","primeiraLetra","nome","apiRequest","drinkRequest","SearchBar","title","selectedRadioButton","setSelectedRadioButton","searchText","setSearchText","useContext","customAlert","fn","msg","Number","alert","response","idMeal","idDrink","id","apiChoose","Header","searchForm","setSearchForm","width","to","profileIcon","searchIcon","Footer","drinkIcon","exploreIcon","mealIcon","useFetchInicialFoods","foods","setFoods","then","res","btnCategory","useInicialFilters","FilterBar","handlerFilter","filterMealsBtn","filterDrinksBtn","map","meal","index","strCategory","key","drink","Loading","Comidas","displayName","food","strMealThumb","strMeal","useFetchInicialDrinks","Drinks","setDrinks","Bebidas","strDrinkThumb","strDrink","Perfil","user","parse","getItem","clear","useFetchIdAndRecomendations","setFood","setDrink","recomendationsState","setRecomendationsState","URL","favoriteRecipes","recipe","console","log","FavoriteFood","allFavorites","newFavorites","sendFavorites","strArea","category","alcoholicOrNot","image","favoriteClick","blackHeartIcon","whiteHeartIcon","RecipeMealsButton","doneRecipes","inProgressRecipes","isInProgress","recipeId","isDone","includes","DetalhesComida","useParams","shared","setShared","strTags","copy","href","shareIcon","ingredients","measures","ingredient","measure","ingredientsFiltered","ingredientsList","strInstructions","videoToken","strYoutube","split","videoUrlEmbed","videoOptions","height","frameBorder","allow","allowFullScreen","renderYoutube","strAlcoholic","RecipeDrinksButton","FavoriteDrink","DetalhesBebida","strtags","Explorar","ExplorarComidas","randomMeal","randomMealJSON","randomFetchMeal","ExplorarBebidas","randomDrink","randomDrinkJSON","randomFetchDrink","AreaBar","filteredArea","ExplorarOrigem","useFetchFoodsIngredients","IngredientesComidas","strIngredient","dataRender","useFetchDrinksIngredients","IngredientesBebidas","strIngredient1","verifyIngredient","undefined","InProgressBebida","canFinalize","setCanFinalize","handleChange","event","checked","inProgressRecipesToSave","removindIngredient","allCheckBoxes","document","getElementsByClassName","result","every","el","isDisabled","numberOfCharactersToRemove","url","link","substring","sharing","defaultChecked","finalizedRecipe","doneDate","Date","tags","recipesSaved","finalize","InProgressComida","ReceitasFeitas","typeToRender","setTypeToRender","doneRecipesExists","recipesToRender","alterURL","comida","bebida","tag","indexIn","dataTest","button","saveTypeToRender","renderFilterButtons","renderDoneRecipes","ReceitasFavoritas","reload","setReaload","screen","screenFiltered","disfavor","renderFavorites","NotFound","App","path","component","inProgressComida","InProgressBebidas","exact","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a045660.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/Myimage.8d8abd02.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from 'react';\n\nconst ContextRecipes = createContext();\n\nexport default ContextRecipes;\n","const categoriesOptions = {\n  meals: 'https://www.themealdb.com/api/json/v1/1/list.php?c=list',\n  drinks: 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list',\n};\n\nexport default async function fetchCategories(type) {\n  const tempType = type;\n  const FIVE_CATEGORYS = 5;\n  const resultsJSON = await fetch(categoriesOptions[tempType]);\n  const results = await resultsJSON.json();\n  return results[tempType].slice(0, FIVE_CATEGORYS);\n}\n","export async function fetchAreas() {\n  const resultsJSON = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n  const results = await resultsJSON.json();\n  return results;\n}\n\nexport async function fetchFilterAreas(area) {\n  if (area !== 'All') {\n    const resultsJSON = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n    const results = await resultsJSON.json();\n    return results;\n  }\n  const resultsJSON = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const results = await resultsJSON.json();\n  return results;\n}\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ContextRecipes from './ContextRecipes';\nimport fetchCategories from '../api/fetchCategories';\nimport { fetchAreas } from '../api/fetchAreas';\n\nfunction RecipesProvider({ children }) {\n  const [filter, setFilter] = useState([]);\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [drinksCategories, setDrinksCategories] = useState([]);\n  const [currentFood, setCurrentFood] = useState({});\n  const [currentFoodIngredients, setCurrentFoodIngredients] = useState([]);\n  const [mainIngredient, setMain] = useState('');\n  const [data, setData] = useState({});\n  const [dataDrink, setDataDrink] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [foodDetails, setFoodDetails] = useState({});\n  const [drinkDetails, setDrinkDetails] = useState({});\n  const [recomendations, setRecomendations] = useState({});\n  const [favorited, setFavorited] = useState(false);\n  const [loadInProgressRecipes, setLoadInProgressRecipes] = useState({\n    cocktails: [],\n    meals: [],\n  });\n  const [foodIngredients, setFoodIngredients] = useState({});\n  const [drinkIngredients, setDrinkIngredients] = useState({});\n  const [currentValueFood, setCurrentValueFood] = useState(null);\n  const [currentValueDrink, setCurrentValueDrink] = useState(null);\n  const [areasFood, setAreasFood] = useState({});\n  // const [filterAreaFood, setFilterAreaFood] = useState('All');\n\n  useEffect(() => {\n    async function fetchData() {\n      const areasAPI = await fetchAreas();\n      const drinksCategoriesAPI = await fetchCategories('drinks');\n      const mealCategoriesAPI = await fetchCategories('meals');\n      setMealsCategories(mealCategoriesAPI);\n      setDrinksCategories(drinksCategoriesAPI);\n      setAreasFood(areasAPI);\n    }\n    fetchData();\n  }, []);\n\n  const state = {\n    setCurrentFoodIngredients,\n    currentFoodIngredients,\n    setCurrentFood,\n    currentFood,\n    setMealsCategories,\n    setFilter,\n    mealsCategories,\n    drinksCategories,\n    filter,\n    mainIngredient,\n    setMain,\n    data,\n    setData,\n    loading,\n    setLoading,\n    dataDrink,\n    setDataDrink,\n    foodDetails,\n    setFoodDetails,\n    recomendations,\n    setRecomendations,\n    drinkDetails,\n    setDrinkDetails,\n    favorited,\n    setFavorited,\n    loadInProgressRecipes,\n    setLoadInProgressRecipes,\n    foodIngredients,\n    setFoodIngredients,\n    drinkIngredients,\n    setDrinkIngredients,\n    currentValueFood,\n    setCurrentValueFood,\n    currentValueDrink,\n    setCurrentValueDrink,\n    areasFood,\n    setAreasFood,\n    // filterAreaFood,\n    // setFilterAreaFood,\n  };\n\n  return (\n    <ContextRecipes.Provider value={ state }>\n      { children }\n    </ContextRecipes.Provider>\n  );\n}\n\nexport default RecipesProvider;\n\nRecipesProvider.propTypes = {\n  children: propTypes.func,\n}.isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ className, label, onClick, datatestid, disabled }) => (\n  <button\n    type=\"button\"\n    onClick={ onClick }\n    data-testid={ datatestid }\n    disabled={ disabled }\n    className={ className }\n  >\n    { label }\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  datatestid: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  disabled: false,\n  className: '',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ label, onChange, name, type, datatestid, value, src, alt, onClick }) => (\n  <label className=\" m-1 login-input \" htmlFor={ name }>\n    { label }\n    <input\n      className=\"form-control mt-1\"\n      type={ type }\n      name={ name }\n      onChange={ onChange }\n      onClick={ onClick }\n      data-testid={ datatestid }\n      value={ value }\n      src={ src }\n      alt={ alt }\n    />\n  </label>\n);\n\nInput.propTypes = {\n  datatestid: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  alt: PropTypes.string,\n  src: PropTypes.string,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nInput.defaultProps = {\n  label: '',\n  value: '',\n  name: '',\n  onChange: null,\n  onClick: null,\n  alt: '',\n  src: '',\n};\n\nexport default Input;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Myimage from '../images/Myimage.png';\nimport Button from '../components/Button';\nimport Input from '../components/Inputs';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  const userEmail = { email };\n\n  useEffect(() => {\n    function buttonAble() {\n      const validEmail = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n      const minOfCaracteres = 6;\n      if (validEmail.test(email) && password.length > minOfCaracteres) {\n        setDisabled(false);\n      }\n    }\n    buttonAble();\n  }, [email, password]);\n\n  const history = useHistory();\n\n  return (\n    <>\n      <h1>APPETITE</h1>\n      <div className=\"login\">\n        <Input\n          type=\"text\"\n          datatestid=\"email-input\"\n          label=\"Email\"\n          name={ email }\n          value={ email }\n          onChange={ (e) => setEmail(e.target.value) }\n        />\n        <Input\n          type=\"password\"\n          label=\"Senha\"\n          name={ password }\n          value={ password }\n          onChange={ (e) => setPassword(e.target.value) }\n          datatestid=\"password-input\"\n        />\n        <Button\n          className=\"button-entrar-app\"\n          label=\"Entrar\"\n          datatestid=\"login-submit-btn\"\n          disabled={ disabled }\n          onClick={ () => {\n            localStorage.setItem('mealsToken', '1');\n            localStorage.setItem('cocktailsToken', '1');\n            localStorage.setItem('user', JSON.stringify(userEmail));\n            history.push('/comidas');\n          } }\n        />\n      </div>\n    </>\n  );\n};\nexport default Login;\n","async function apiRequest(radio, text) {\n  if (radio === 'ingrediente') {\n    const ingrediente = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${text}`);\n    return ingrediente.json();\n  }\n  if (radio === 'primeiraLetra') {\n    const primeiraLetra = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${text}`);\n    return primeiraLetra.json();\n  }\n\n  const nome = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${text}`);\n  return nome.json();\n}\n\nexport default apiRequest;\n","async function drinkRequest(radio, text) {\n  if (radio === 'ingrediente') {\n    const ingrediente = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${text}`);\n    return ingrediente.json();\n  }\n  if (radio === 'primeiraLetra') {\n    const primeiraLetra = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${text}`);\n    return primeiraLetra.json();\n  }\n\n  const nome = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${text}`);\n  return nome.json();\n}\n\nexport default drinkRequest;\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport apiRequest from '../service/service';\nimport ContextRecipes from '../context/ContextRecipes';\nimport drinkRequest from '../service/drinkservice';\n\nfunction SearchBar({ title }) {\n  const [selectedRadioButton, setSelectedRadioButton] = useState('ingrediente');\n  const [searchText, setSearchText] = useState('');\n  const { setData, setLoading, setDataDrink } = useContext(ContextRecipes);\n  const history = useHistory();\n\n  const customAlert = (fn, msg) => {\n    fn(msg);\n  };\n\n  // RESOLVIDO PROBLEM DE LINT RESOLVENDO PROBLEMAS DE ASSINCRONICIDADE COM LOADING\n  async function apiChoose() {\n    const SIZE_SEARCH = Number(searchText.length);\n    if (SIZE_SEARCH > 1 && selectedRadioButton === 'primeiraLetra') {\n      customAlert(alert, 'Sua busca deve conter somente 1 (um) caracter');\n    }\n    setLoading(true);\n    if (title === 'Comidas') {\n      const response = await apiRequest(selectedRadioButton, searchText);\n      if (response.meals === null) {\n        alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      } else if (response.meals.length === 1) {\n        history.push(`/comidas/${response.meals[0].idMeal}`);\n      }\n      setData(response);\n      setLoading(false);\n    }\n    if (title === 'Bebidas') {\n      const response = await drinkRequest(selectedRadioButton, searchText);\n      if (response.drinks === null) {\n        alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      } else if (response.drinks.length === 1) {\n        history.push(`/bebidas/${response.drinks[0].idDrink}`);\n      }\n      setDataDrink(response);\n      setLoading(false);\n    }\n  }\n\n  return (\n    <form className=\"form-app\">\n      <input\n        className=\"search-input m-2\"\n        type=\"text\"\n        name=\"searchtext\"\n        data-testid=\"search-input\"\n        onChange={ ({ target: { value } }) => setSearchText(value) }\n      />\n      <label htmlFor=\"ingrediente\">\n        <input\n          className=\"m-1\"\n          type=\"radio\"\n          id=\"ingrediente\"\n          value=\"ingrediente\"\n          name=\"serchType\"\n          data-testid=\"ingredient-search-radio\"\n          onChange={ ({ target: { value } }) => setSelectedRadioButton(value) }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"nome\">\n        <input\n          className=\"m-1\"\n          type=\"radio\"\n          id=\"nome\"\n          value=\"nome\"\n          name=\"serchType\"\n          data-testid=\"name-search-radio\"\n          onChange={ ({ target: { value } }) => setSelectedRadioButton(value) }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"primeiraLetra\">\n        <input\n          className=\"m-1\"\n          type=\"radio\"\n          id=\"primeiraLetra\"\n          value=\"primeiraLetra\"\n          name=\"serchType\"\n          data-testid=\"first-letter-search-radio\"\n          onChange={ ({ target: { value } }) => setSelectedRadioButton(value) }\n        />\n        Primeira Letra\n      </label>\n      <Button\n        className=\"btn btn-success btn-sm m-3 p-3\"\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => apiChoose() }\n      >\n        Buscar\n      </Button>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  title: propTypes.string.isRequired,\n\n};\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\n\nfunction Header({ title }) {\n  const [searchForm, setSearchForm] = useState(false);\n  const renderSearchImage = () => (\n    <button\n      className=\"lupa\"\n      type=\"button\"\n      onClick={ () => setSearchForm(!searchForm) }\n    >\n      <img\n        src={ searchIcon }\n        alt=\"Profile\"\n        data-testid=\"search-top-btn\"\n      />\n    </button>\n  );\n\n  return (\n    <div>\n      <div className=\"search-perfil-app\">\n        <Link width=\"40%\" to=\"/perfil\">\n          <img\n            src={ profileIcon }\n            alt=\"Profile\"\n            data-testid=\"profile-top-btn\"\n          />\n        </Link>\n        { title === 'Comidas'\n       || title === 'Bebidas'\n       || title === 'Explorar Origem' ? renderSearchImage() : false }\n        { searchForm\n          ? (\n            <SearchBar title={ title } />\n          )\n          : false}\n      </div>\n      <div>\n        <h1 data-testid=\"page-title\">{ title }</h1>\n      </div>\n      <header className=\"container\" />\n    </div>\n\n  );\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  title: propTypes.string.isRequired,\n};\n","import React from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\" data-testid=\"footer\">\n      <Link to=\"/bebidas\">\n        <img\n          className=\"mb-3\"\n          src={ drinkIcon }\n          alt=\"Footer icon\"\n          data-testid=\"drinks-bottom-btn\"\n        />\n      </Link>\n      <Link to=\"/explorar\">\n        <img\n          className=\"mb-1\"\n          src={ exploreIcon }\n          alt=\"Footer icon\"\n          data-testid=\"explore-bottom-btn\"\n        />\n      </Link>\n      <Link to=\"/comidas\">\n        <img\n          className=\"mb-1\"\n          src={ mealIcon }\n          alt=\"Footer icon\"\n          data-testid=\"food-bottom-btn\"\n        />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { useState, useEffect, useContext } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\n\nconst useFetchInicialFoods = () => {\n  const [foods, setFoods] = useState({});\n  const { setData, currentValueFood } = useContext(ContextRecipes);\n\n  const fetchFood = () => {\n    if (currentValueFood === null) {\n      fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n        .then((res) => res.json())\n        .then((res) => {\n          setFoods(res);\n          setData(res);\n        });\n    }\n  };\n  useEffect(fetchFood, [setData]);\n  return foods;\n};\n\nexport default useFetchInicialFoods;\n","export async function filterMealsBtn(btnCategory) {\n  const ingrediente = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${btnCategory}`);\n  return ingrediente.json();\n}\n\nexport async function filterDrinksBtn(btnCategory) {\n  const ingrediente = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${btnCategory}`);\n  return ingrediente.json();\n}\n","import { useEffect, useContext } from 'react';\n// import { filterDrinksBtn, filterMealsBtn } from '../api/fetchFilterBtn';\nimport ContextRecipes from '../context/ContextRecipes';\nimport apiRequest from '../service/service';\nimport drinkRequest from '../service/drinkservice';\n\nconst useInicialFilters = (title) => {\n  const {\n    setData,\n    setDataDrink,\n    currentValueFood,\n    currentValueDrink,\n  } = useContext(ContextRecipes);\n\n  useEffect(() => {\n    if (title === 'Comidas' && currentValueFood !== null) {\n      apiRequest('ingrediente', currentValueFood)\n        .then((res) => setData(res));\n    }\n    if (title === 'Bebidas' && currentValueDrink !== null) {\n      drinkRequest('ingrediente', currentValueDrink)\n        .then((res) => setDataDrink(res));\n    }\n  }, []);\n};\n\nexport default useInicialFilters;\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport ContextRecipes from '../context/ContextRecipes';\nimport { filterMealsBtn, filterDrinksBtn } from '../api/fetchFilterBtn';\n// import getAllRecipes from '../service/FoodDrinksRequest';\nimport useInicialFilters from '../Hooks/fetchInicialFiters';\nimport '../App.css';\n\nfunction FilterBar({ title }) {\n  const {\n    setData,\n    setDataDrink,\n    mealsCategories,\n    drinksCategories,\n    currentValueFood,\n    setCurrentValueFood,\n    currentValueDrink,\n    setCurrentValueDrink,\n  } = useContext(ContextRecipes);\n\n  useInicialFilters(title);\n\n  function handleAllMeals() {\n    fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n      });\n  }\n\n  function handleAllDrinks() {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n      .then((res) => res.json())\n      .then((res) => {\n        setDataDrink(res);\n      });\n  }\n\n  function handlerFilter({ target: { value } }) {\n    if (title === 'Comidas') {\n      if (value !== currentValueFood) {\n        filterMealsBtn(value)\n          .then((res) => setData(res));\n        setCurrentValueFood(value);\n      } else {\n        fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n          .then((res) => res.json())\n          .then((res) => {\n            setData(res);\n          });\n        setCurrentValueFood(null);\n      }\n    }\n    if (title === 'Bebidas') {\n      if (value !== currentValueDrink) {\n        filterDrinksBtn(value)\n          .then((res) => setDataDrink(res));\n        setCurrentValueDrink(value);\n      } else {\n        fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n          .then((res) => res.json())\n          .then((res) => {\n            setDataDrink(res);\n          });\n        setCurrentValueDrink(null);\n      }\n    }\n  }\n\n  if (title === 'Comidas') {\n    return (\n      <div className=\"button-container-app p-3\">\n        <button\n          className=\"search-bar-buttons-app m-1 \"\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => handleAllMeals() }\n        >\n          All\n        </button>\n        {\n          mealsCategories.map((meal, index) => (\n            <button\n              data-testid={ `${meal.strCategory}-category-filter` }\n              value={ `${meal.strCategory}` }\n              className=\"search-bar-buttons-app m-1 \"\n              type=\"button\"\n              key={ index }\n              onClick={ handlerFilter }\n            >\n              {meal.strCategory}\n            </button>))\n        }\n      </div>\n    );\n  }\n\n  if (title === 'Bebidas') {\n    return (\n      <section className=\"filterBar m-1\">\n        <button\n          className=\"search-bar-buttons-app\"\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ handleAllDrinks }\n        >\n          All\n        </button>\n        {\n          drinksCategories.map((drink, index) => (\n            <button\n              data-testid={ `${drink.strCategory}-category-filter` }\n              value={ `${drink.strCategory}` }\n              className=\"search-bar-buttons-app m-1\"\n              type=\"button\"\n              key={ index }\n              onClick={ handlerFilter }\n            >\n              {drink.strCategory}\n            </button>))\n        }\n      </section>\n    );\n  }\n}\n\nFilterBar.propTypes = {\n  title: propTypes.string.isRequired,\n};\n\nexport default FilterBar;\n","import React from 'react';\nimport './Loading.css';\n\nconst Loading = () => (\n  <div>\n    <h1>Cooking in progress..</h1>\n    <div id=\"cooking\">\n      <div className=\"bubble\" />\n      <div className=\"bubble\" />\n      <div className=\"bubble\" />\n      <div className=\"bubble\" />\n      <div className=\"bubble\" />\n      <div id=\"area\">\n        <div id=\"sides\">\n          <div id=\"pan\" />\n          <div id=\"handle\" />\n        </div>\n        <div id=\"pancake\">\n          <div id=\"pastry\" />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Loading;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ContextRecipes from '../context/ContextRecipes';\nimport useFetchInicialFoods from '../Hooks/fetchInicialFoods';\nimport FilterBar from '../components/FilterBar';\nimport Loading from '../components/Loading';\n\nfunction Comidas() {\n  const DOZE = 12;\n  Comidas.displayName = 'Comidas';\n  const { data } = useContext(ContextRecipes);\n  useFetchInicialFoods();\n\n  const dataAux = { ...data };\n  const { meals } = dataAux;\n\n  const loadingFunc = () => (\n    <Loading />\n  );\n  const dataRender = () => (\n    <div className=\"container-recipes-app\">\n      { meals && meals.slice(0, DOZE).map((food, index) => (\n        <div\n          key={ index }\n          className=\"bg-color card-app-size text-center\"\n        >\n          <Link\n            className=\"card-body\"\n            to={ `/comidas/${food.idMeal}` }\n            key={ food.idMeal }\n          >\n            <div\n              className=\"text-light\"\n              data-testid={ `${index}-recipe-card` }\n              key={ food.idMeal }\n            >\n              <img\n                className=\"card-img-top img-foods-app\"\n                data-testid={ `${index}-card-img` }\n                src={ food.strMealThumb }\n                alt={ food.strMeal }\n              />\n              <p\n                className=\"title-foods-app card-title\"\n                data-testid={ `${index}-card-name` }\n              >\n                {food.strMeal}\n              </p>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>);\n\n  return (\n    <>\n      <div className=\"pb-5\">\n        <Header title={ Comidas.displayName } />\n        <FilterBar title={ Comidas.displayName } />\n        <div>\n          {!data.meals ? loadingFunc() : dataRender()}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Comidas;\n","import { useState, useEffect, useContext } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\n\nconst useFetchInicialDrinks = () => {\n  const [Drinks, setDrinks] = useState({});\n  const { setDataDrink, currentValueDrink } = useContext(ContextRecipes);\n\n  const fetchDrink = () => {\n    if (currentValueDrink === null) {\n      fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n        .then((res) => res.json())\n        .then((res) => {\n          setDataDrink(res);\n          setDrinks(res);\n        });\n    }\n  };\n  useEffect(fetchDrink, [setDataDrink]);\n  return Drinks;\n};\n\nexport default useFetchInicialDrinks;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ContextRecipes from '../context/ContextRecipes';\nimport useFetchInicialDrinks from '../Hooks/fetchInicialDrinks';\nimport FilterBar from '../components/FilterBar';\nimport Loading from '../components/Loading';\n\nfunction Bebidas() {\n  const DOZE = 12;\n  Bebidas.displayName = 'Bebidas';\n  const { dataDrink } = useContext(ContextRecipes);\n  useFetchInicialDrinks();\n\n  const dataAux = { ...dataDrink };\n  const { drinks } = dataAux;\n\n  const loadingFunc = () => (\n    <Loading />\n  );\n  const dataRender = () => (\n    <div\n      className=\"container-recipes-app\"\n    >\n      { drinks && drinks.slice(0, DOZE).map((drink, index) => (\n        <div\n          key={ index }\n          className=\"bg-color card-app-size text-center\"\n        >\n          <Link\n            className=\"card-body\"\n            to={ `/bebidas/${drink.idDrink}` }\n            key={ drink.idDrink }\n          >\n            <div\n              className=\"text-light\"\n              data-testid={ `${index}-recipe-card` }\n              key={ drink.idDrink }\n            >\n              <img\n                className=\"card-img-top img-foods-app\"\n                data-testid={ `${index}-card-img` }\n                src={ drink.strDrinkThumb }\n                alt={ drink.strDrink }\n              />\n              <p\n                className=\"title-foods-app card-title\"\n                data-testid={ `${index}-card-name` }\n              >\n                {drink.strDrink}\n              </p>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>);\n\n  return (\n    <>\n      <div className=\"pb-5\">\n        <Header title={ Bebidas.displayName } />\n        <FilterBar title={ Bebidas.displayName } />\n        <div>\n          {!dataDrink.drinks ? loadingFunc() : dataRender()}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Bebidas;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Button from '../components/Button';\n\nfunction Perfil() {\n  const user = (JSON.parse(localStorage.getItem('user')) || '{}');\n  const history = useHistory();\n\n  Perfil.displayName = 'Perfil';\n  return (\n    <div>\n      <Header title={ Perfil.displayName } />\n      <p data-testid=\"profile-email\">\n        Email:\n        { user.email }\n      </p>\n      <div className=\"perfil-container-app\">\n        <Button\n          className=\"btn btn-dark m-3\"\n          label=\"Receitas Feitas\"\n          datatestid=\"profile-done-btn\"\n          onClick={ () => history.push('/receitas-feitas') }\n        />\n        <Button\n          className=\"btn btn-dark m-3\"\n          label=\"Receitas Favoritas\"\n          datatestid=\"profile-favorite-btn\"\n          onClick={ () => history.push('/receitas-favoritas') }\n        />\n        <Button\n          className=\"btn btn-danger m-3\"\n          label=\"Sair\"\n          datatestid=\"profile-logout-btn\"\n          onClick={ () => localStorage.clear() || history.push('/') }\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Perfil;\n","import { useState, useEffect, useContext } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\n\nconst useFetchIdAndRecomendations = (id, type) => {\n  const [food, setFood] = useState({});\n  const [drink, setDrink] = useState({});\n  const [recomendationsState, setRecomendationsState] = useState({});\n  const { setFoodDetails,\n    setRecomendations,\n    setDrinkDetails,\n    favorited,\n    setFavorited,\n    setLoadInProgressRecipes } = useContext(ContextRecipes);\n\n  const fetchIdAndRecomendations = () => {\n    setLoadInProgressRecipes(JSON.parse(localStorage.getItem('inProgressRecipes')));\n    setFavorited(false);\n    if (type === 'foods') {\n      const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      fetch(URL)\n        .then((res) => res.json())\n        .then((res) => {\n          setFood(res);\n          setFoodDetails(res);\n        });\n      const URL_DRINKS_RECOMEND = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      fetch(URL_DRINKS_RECOMEND)\n        .then((res) => res.json())\n        .then((res) => {\n          setRecomendations(res);\n          setRecomendationsState(res);\n        });\n      let favoriteRecipes = [];\n      if (localStorage.getItem('favoriteRecipes')) {\n        favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      }\n      if (favoriteRecipes.filter((recipe) => recipe.id === id).length > 0) {\n        setFavorited(true);\n      }\n    }\n    if (type === 'drinks') {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      fetch(URL)\n        .then((res) => res.json())\n        .then((res) => {\n          setDrink(res);\n          setDrinkDetails(res);\n        })\n        .then(console.log('drink no hook:', food));\n      const URL_FOODS_RECOMEND = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      fetch(URL_FOODS_RECOMEND)\n        .then((res) => res.json())\n        .then((res) => {\n          setRecomendations(res);\n          setRecomendationsState(res);\n        });\n      let favoriteRecipes = [];\n      if (localStorage.getItem('favoriteRecipes')) {\n        favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      }\n      if (favoriteRecipes.filter((recipe) => recipe.id === id).length > 0) {\n        setFavorited(true);\n      }\n    }\n  };\n  useEffect(fetchIdAndRecomendations, []);\n  return [food, drink, recomendationsState, favorited];\n};\n\nexport default useFetchIdAndRecomendations;\n","import React, { useContext } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FavoriteFood() {\n  const { foodDetails,\n    favorited,\n    setFavorited } = useContext(ContextRecipes);\n\n  const favoriteClick = () => {\n    const allFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const newFavorites = allFavorites.filter((meal) => meal\n        .id !== foodDetails.meals[0].idMeal);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n      setFavorited(!favorited);\n    } else {\n      const sendFavorites = {\n        id: foodDetails.meals[0].idMeal,\n        type: 'comida',\n        area: foodDetails.meals[0].strArea,\n        category: foodDetails.meals[0].strCategory,\n        alcoholicOrNot: '',\n        name: foodDetails.meals[0].strMeal,\n        image: foodDetails.meals[0].strMealThumb,\n      };\n      if (allFavorites) {\n        allFavorites.push(sendFavorites);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(allFavorites));\n        setFavorited(!favorited);\n      } else {\n        localStorage.setItem('favoriteRecipes', JSON.stringify([sendFavorites]));\n        setFavorited(!favorited);\n      }\n    }\n  };\n  return (\n    <button type=\"button\" onClick={ () => favoriteClick() }>\n      <img\n        src={ (favorited) ? blackHeartIcon : whiteHeartIcon }\n        alt=\"fovorited\"\n        data-testid=\"favorite-btn\"\n      />\n    </button>\n  );\n}\n\nexport default FavoriteFood;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction RecipeMealsButton({ foodDetails }) {\n  const history = useHistory();\n  let doneRecipes = [];\n  let inProgressRecipes = {};\n  let isInProgress = false;\n  const recipeId = foodDetails.meals[0].idMeal;\n  if (localStorage.getItem('doneRecipes')) {\n    doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  }\n\n  if (localStorage.getItem('inProgressRecipes') !== null) {\n    inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  }\n\n  const isDone = doneRecipes.includes((recipe) => recipe\n    .id === recipeId);\n\n  if (inProgressRecipes.meals && inProgressRecipes.meals[recipeId]) {\n    isInProgress = true;\n  }\n\n  if (isDone) { return false; }\n\n  if (isInProgress) {\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"iniciarReceita\"\n      >\n        Continuar Receita\n      </button>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      className=\"iniciarReceita\"\n      onClick={ () => history.push(`/comidas/${recipeId}/in-progress`) }\n    >\n      Start Recipe\n    </button>\n  );\n}\n\nRecipeMealsButton.propTypes = {\n  foodDetails: PropTypes.shape({ meals: [] }).isRequired,\n};\n\nexport default RecipeMealsButton;\n","import React, { useContext, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport ContextRecipes from '../context/ContextRecipes';\nimport useFetchIdAndRecomendations from '../Hooks/fetchDetailsAndRecomendations';\nimport shareIcon from '../images/shareIcon.svg';\nimport FavoriteFood from '../components/FavoriteFood';\nimport Loading from '../components/Loading';\nimport './detalhes.css';\n\nimport RecipeMealsButton from '../components/RecipeMealsButton';\n\nfunction DetalhesComida() {\n  const { id } = useParams();\n  const [shared, setShared] = useState('escondido');\n  const { foodDetails,\n    recomendations,\n  } = useContext(ContextRecipes);\n\n  useFetchIdAndRecomendations(id, 'foods');\n\n  console.log('food na pagina de detalhes:', foodDetails);\n\n  const ingredientsList = () => {\n    const MAX_INGREDIENTS = 20;\n    const ingredients = [];\n    const measures = [];\n    for (let index = 1; index <= MAX_INGREDIENTS; index += 1) {\n      const ingredient = `strIngredient${index}`;\n      const measure = `strMeasure${index}`;\n      ingredients.push(foodDetails.meals[0][ingredient]);\n      measures.push(foodDetails.meals[0][measure]);\n    }\n    const ingredientsFiltered = ingredients\n      .filter((ingredient) => (ingredient !== '' && ingredient !== null));\n    console.log('filtered', ingredientsFiltered);\n    return (\n      <>\n        {ingredientsFiltered.map((ingredient, index) => (\n          (\n            <li\n              className=\"ingredient-li\"\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {ingredient}\n              {measures[index]}\n            </li>)\n        ))}\n      </>\n    );\n  };\n\n  const renderYoutube = () => {\n    const videoToken = foodDetails.meals[0].strYoutube.split('=')[1];\n    const videoUrlEmbed = `https://www.youtube.com/embed/${videoToken}`;\n    const videoOptions1 = 'accelerometer; autoplay; clipboard-write; ';\n    const videoOptions = `${videoOptions1}encrypted-media; gyroscope; picture-in-picture`;\n\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          className=\"iframe-video\"\n          width=\"300\"\n          height=\"300\"\n          src={ videoUrlEmbed }\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow={ videoOptions }\n          allowFullScreen\n          data-testid=\"video\"\n        />\n      </div>\n    );\n  };\n\n  const renderRecomendations = () => {\n    const SEIS = 6;\n    return (\n      recomendations.drinks\n        ? (\n          <div className=\"recomendations\">\n            {recomendations.drinks.slice(0, SEIS).map((drink, index) => (\n              <Link key={ drink.idDrink } to={ `/bebidas/${drink.idDrink}` }>\n                <div\n                  data-testid={ `${index}-recomendation-card` }\n                >\n                  <div className=\"mb-5\">\n                    <p className=\"m-2\">{ drink.strAlcoholic }</p>\n                    <p\n                      className=\"m-2\"\n                      data-testid={ `${index}-recomendation-title` }\n                    >\n                      { drink.strDrink }\n                    </p>\n                    <img\n                      className=\"mb-5 pb-3 img-thumbnail\"\n                      width=\"100em\"\n                      src={ drink.strDrinkThumb }\n                      alt={ drink.strDrink }\n                    />\n                  </div>\n                </div>\n              </Link>))}\n          </div>)\n        : <Loading />\n    );\n  };\n\n  const sharing = () => {\n    copy(window.location.href);\n    setShared('aparente');\n  };\n\n  return (\n    <section>\n      { foodDetails.meals\n        ? (\n          <div>\n\n            <h1 data-testid=\"recipe-title\">\n              {foodDetails.meals[0].strMeal}\n            </h1>\n            <div className=\"img-details-container\">\n              <img\n                width=\"300em\"\n                src={ foodDetails.meals[0].strMealThumb }\n                alt={ foodDetails.meals[0].strMeal }\n                data-testid=\"recipe-photo\"\n              />\n            </div>\n            <h4 data-testid=\"recipe-category\">\n              { foodDetails.meals[0].strCategory }\n            </h4>\n            <h5>\n              {foodDetails.meals[0].strTags}\n            </h5>\n            <div className=\"button-details-app\">\n              <div>\n                <button type=\"button\" onClick={ () => sharing() }>\n                  <img src={ shareIcon } alt=\"shareIcon\" data-testid=\"share-btn\" />\n                </button>\n                <p className={ shared }>Link copiado!</p>\n              </div>\n              <div>\n                <FavoriteFood />\n              </div>\n            </div>\n            <ul>\n              <p className=\"ingredientes-title\">Ingredients</p>\n              { ingredientsList() }\n            </ul>\n            <h3 className=\"ingredientes-title\">Instructions</h3>\n            <p\n              className=\"instructions-details-app\"\n              data-testid=\"instructions\"\n            >\n              {' '}\n              { foodDetails.meals[0].strInstructions }\n              {' '}\n            </p>\n            { renderYoutube() }\n            <div>\n              { renderRecomendations() }\n            </div>\n            <RecipeMealsButton foodDetails={ foodDetails } />\n          </div>)\n        : <Loading />}\n    </section>\n  );\n}\n\nexport default DetalhesComida;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction RecipeDrinksButton({ drinkDetails }) {\n  const history = useHistory();\n  let doneRecipes = [];\n  let inProgressRecipes = {};\n  let isInProgress = false;\n  const recipeId = drinkDetails.drinks[0].idDrink;\n  if (localStorage.getItem('doneRecipes')) {\n    doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  }\n\n  if (localStorage.getItem('inProgressRecipes') !== null) {\n    inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  }\n\n  const isDone = doneRecipes.includes((recipe) => recipe\n    .id === recipeId);\n\n  if (inProgressRecipes.cocktails && inProgressRecipes.cocktails[recipeId]) {\n    isInProgress = true;\n  }\n\n  if (isDone) { return false; }\n\n  if (isInProgress) {\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"iniciarReceita\"\n      >\n        Continuar Receita\n      </button>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      className=\"iniciarReceita\"\n      onClick={ () => history.push(`/bebidas/${recipeId}/in-progress`) }\n    >\n      Start Recipe\n    </button>\n  );\n}\n\nRecipeDrinksButton.propTypes = {\n  drinkDetails: PropTypes.shape({ drinks: [] }).isRequired,\n};\n\nexport default RecipeDrinksButton;\n","import React, { useContext } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FavoriteDrink() {\n  const { drinkDetails,\n    favorited,\n    setFavorited } = useContext(ContextRecipes);\n  const favoriteClick = () => {\n    const allFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const newFavorites = allFavorites.filter((drink) => drink\n        .id !== drinkDetails.drinks[0].idDrink);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n      setFavorited(!favorited);\n    } else {\n      const sendFavorites = {\n        id: drinkDetails.drinks[0].idDrink,\n        type: 'bebida',\n        area: '',\n        category: drinkDetails.drinks[0].strCategory,\n        alcoholicOrNot: drinkDetails.drinks[0].strAlcoholic,\n        name: drinkDetails.drinks[0].strDrink,\n        image: drinkDetails.drinks[0].strDrinkThumb,\n      };\n      if (allFavorites) {\n        allFavorites.push(sendFavorites);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(allFavorites));\n        setFavorited(!favorited);\n      } else {\n        localStorage.setItem('favoriteRecipes', JSON.stringify([sendFavorites]));\n        setFavorited(!favorited);\n      }\n    }\n  };\n\n  return (\n    <button type=\"button\" onClick={ () => favoriteClick() }>\n      <img\n        src={ (favorited) ? blackHeartIcon : whiteHeartIcon }\n        alt=\"fovorited\"\n        data-testid=\"favorite-btn\"\n      />\n    </button>\n  );\n}\n\nexport default FavoriteDrink;\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport RecipeDrinksButton from '../components/RecipeDrinksButton';\nimport ContextRecipes from '../context/ContextRecipes';\nimport useFetchIdAndRecomendations from '../Hooks/fetchDetailsAndRecomendations';\nimport shareIcon from '../images/shareIcon.svg';\nimport './detalhes.css';\nimport FavoriteDrink from '../components/FavoriteDrink';\nimport Loading from '../components/Loading';\n\nfunction DetalhesBebida() {\n  const { id } = useParams();\n  const [shared, setShared] = useState('escondido');\n  const { drinkDetails,\n    recomendations,\n  } = useContext(ContextRecipes);\n\n  useFetchIdAndRecomendations(id, 'drinks');\n  console.log('drink na pagina de detalhes:', drinkDetails);\n\n  const ingredientsList = () => {\n    const MAX_INGREDIENTS = 15;\n    const ingredients = [];\n    const measures = [];\n    for (let index = 1; index <= MAX_INGREDIENTS; index += 1) {\n      const ingredient = `strIngredient${index}`;\n      const measure = `strMeasure${index}`;\n      ingredients.push(drinkDetails.drinks[0][ingredient]);\n      measures.push(drinkDetails.drinks[0][measure]);\n    }\n    const ingredientsFiltered = ingredients\n      .filter((ingredient) => (ingredient !== '' && ingredient !== null));\n    return (\n      <>\n        {ingredientsFiltered.map((ingredient, index) => (\n          (\n            <li\n              className=\"ingredient-li\"\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {' '}\n              {ingredient}\n              {' '}\n              {measures[index]}\n              {' '}\n            </li>)\n        ))}\n      </>\n    );\n  };\n\n  const renderRecomendations = () => {\n    const SEIS = 6;\n    return (\n      recomendations.meals\n        ? (\n          <div className=\"recomendations\">\n            {recomendations.meals.slice(0, SEIS).map((meal, index) => (\n              <div\n                key={ meal.idDrink }\n                data-testid={ `${index}-recomendation-card` }\n              >\n                <div className=\"mb-5\">\n                  <p className=\"m-2\">{ meal.strtags }</p>\n                  <p\n                    className=\"m-2\"\n                    data-testid={ `${index}-recomendation-title` }\n                  >\n                    { meal.strMeal }\n                  </p>\n                  <img\n                    className=\"mb-5 pb-3 img-thumbnail\"\n                    width=\"100em\"\n                    src={ meal.strMealThumb }\n                    alt={ meal.strMeal }\n                  />\n                </div>\n              </div>\n            ))}\n          </div>)\n        : <Loading />\n    );\n  };\n\n  const sharing = () => {\n    copy(window.location.href);\n    setShared('aparente');\n  };\n\n  return (\n    <div>\n      { drinkDetails.drinks\n        ? (\n          <div>\n            <h1 data-testid=\"recipe-title\">\n              {drinkDetails.drinks[0].strDrink}\n            </h1>\n            <div className=\"img-details-container\">\n              <img\n                width=\"300em\"\n                src={ drinkDetails.drinks[0].strDrinkThumb }\n                alt={ drinkDetails.drinks[0].strDrink }\n                data-testid=\"recipe-photo\"\n              />\n            </div>\n            <h4>\n              { drinkDetails.drinks[0].strCategory }\n            </h4>\n            <h5 data-testid=\"recipe-category\">\n              {drinkDetails.drinks[0].strAlcoholic}\n            </h5>\n            <div className=\"button-details-app\">\n              <div>\n                <button type=\"button\" onClick={ () => sharing() }>\n                  <img src={ shareIcon } alt=\"shareIcon\" data-testid=\"share-btn\" />\n                </button>\n                <p className={ shared }>Link copiado!</p>\n              </div>\n              <div>\n                <FavoriteDrink />\n              </div>\n            </div>\n            <ul>\n              <h3 className=\"ingredientes-title\">Ingredients</h3>\n              { ingredientsList() }\n            </ul>\n            <h3 className=\"ingredientes-title\">Instructions</h3>\n            <p className=\"instructions-details-app\" data-testid=\"instructions\">\n              { drinkDetails.drinks[0].strInstructions }\n            </p>\n            <div>\n              { renderRecomendations() }\n            </div>\n            <RecipeDrinksButton drinkDetails={ drinkDetails } />\n          </div>)\n        : <Loading />}\n    </div>\n  );\n}\n\nexport default DetalhesBebida;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n// import ExplorarComidas from './ExplorarComidas';\n\nfunction Explorar() {\n  Explorar.displayName = 'Explorar';\n  const history = useHistory();\n  return (\n    <div>\n      <Header title={ Explorar.displayName } />\n      <div className=\"explorer-container-buttons\">\n        <Button\n          className=\"explorer-button-initial mb-5\"\n          type=\"button\"\n          data-testid=\"explore-food\"\n          onClick={ () => history.push('explorar/comidas') }\n        >\n          Explorar Comidas\n        </Button>\n        <Button\n          className=\" explorer-button-initial\"\n          type=\"button\"\n          data-testid=\"explore-drinks\"\n          onClick={ () => history.push('explorar/bebidas') }\n        >\n          Explorar Bebidas\n        </Button>\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Explorar;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarComidas() {\n  ExplorarComidas.displayName = 'Explorar Comidas';\n  const history = useHistory();\n  async function randomFetchMeal() {\n    const randomMeal = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n    const randomMealJSON = await randomMeal.json();\n    return history.push(`/comidas/${randomMealJSON.meals[0].idMeal}`);\n  }\n  return (\n    <div>\n      <Header title={ ExplorarComidas.displayName } />\n      <Button\n        className=\"btn btn-dark btn-sm m-3 p-3\"\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={ () => history.push('comidas/ingredientes') }\n      >\n        Por Ingredientes\n      </Button>\n      <Button\n        className=\"btn btn-dark btn-sm m-3 p-3\"\n        type=\"button\"\n        data-testid=\"explore-by-area\"\n        onClick={ () => history.push('comidas/area') }\n      >\n        Por Local de Origem\n      </Button>\n      <Button\n        className=\"btn btn-danger btn-sm m-3 p-3\"\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={ () => randomFetchMeal() }\n      >\n        Me Surpreenda!\n      </Button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorarComidas;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarBebidas() {\n  ExplorarBebidas.displayName = 'Explorar Bebidas';\n  const history = useHistory();\n  async function randomFetchDrink() {\n    const randomDrink = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    const randomDrinkJSON = await randomDrink.json();\n    return history.push(`/bebidas/${randomDrinkJSON.drinks[0].idDrink}`);\n  }\n  return (\n    <div>\n      <Header title={ ExplorarBebidas.displayName } />\n      <Button\n        className=\"btn btn-dark btn-sm m-3 p-3\"\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={ () => history.push('bebidas/ingredientes') }\n      >\n        Por Ingredientes\n      </Button>\n      <Button\n        className=\"btn btn-danger btn-sm m-3 p-3\"\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={ () => randomFetchDrink() }\n      >\n        Me Surpreenda!\n      </Button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorarBebidas;\n","import React, { useContext } from 'react';\n// import propTypes from 'prop-types';\nimport ContextRecipes from '../context/ContextRecipes';\nimport { fetchFilterAreas } from '../api/fetchAreas';\n\nfunction AreaBar() {\n  const { areasFood, setData } = useContext(ContextRecipes);\n  const { meals } = areasFood;\n\n  async function handleChange({ target: { value } }) {\n    const filteredArea = await fetchFilterAreas(value);\n    setData(filteredArea);\n  }\n\n  return (\n    <div className=\"select-explorer-container\">\n      Country/Regions\n      <select\n        className=\"form-select m-1\"\n        name=\"area\"\n        data-testid=\"explore-by-area-dropdown\"\n        // value={  }\n        onChange={ handleChange }\n      >\n        <option\n          data-testid=\"All-option\"\n          value=\"All\"\n        >\n          All\n        </option>\n        {meals && meals.map((area, index) => (\n          <option\n            data-testid={ `${area.strArea}-option` }\n            key={ index }\n            value={ `${area.strArea}` }\n          >\n            {area.strArea}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default AreaBar;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport AreaBar from '../components/AreaBar';\nimport useFetchInicialFoods from '../Hooks/fetchInicialFoods';\nimport ContextRecipes from '../context/ContextRecipes';\n\nfunction ExplorarOrigem() {\n  ExplorarOrigem.displayName = 'Explorar Origem';\n  const DOZE = 12;\n  const { data } = useContext(ContextRecipes);\n  useFetchInicialFoods();\n\n  const dataAux = { ...data };\n  const { meals } = dataAux;\n\n  console.log(data);\n  const loadingFunc = () => (<div>..Loading...</div>);\n  const dataRender = () => (\n    <div className=\"container-recipes-app p-5\">\n      { meals && meals.slice(0, DOZE).map((food, index) => (\n        <div key={ index } className=\"bg-color card-app-size text-center\">\n          <Link\n            className=\"card-body\"\n            to={ `/comidas/${food.idMeal}` }\n            key={ food.idMeal }\n          >\n            <div data-testid={ `${index}-recipe-card` } key={ food.idMeal }>\n              <p\n                className=\"title-foods-app card-title\"\n                data-testid={ `${index}-card-name` }\n              >\n                {food.strMeal}\n              </p>\n              <img\n                className=\"card-img-top img-foods-app\"\n                data-testid={ `${index}-card-img` }\n                src={ food.strMealThumb }\n                alt={ food.strMeal }\n              />\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>);\n\n  return (\n    <div>\n      <Header title={ ExplorarOrigem.displayName } />\n      <AreaBar />\n      <div>\n        {!data ? loadingFunc() : dataRender()}\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default ExplorarOrigem;\n","import { useContext, useEffect } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\n\nconst useFetchFoodsIngredients = () => {\n  const { foodIngredients, setFoodIngredients } = useContext(ContextRecipes);\n\n  function fetchFoodsIngredients() {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\n      .then((res) => res.json())\n      .then((res) => setFoodIngredients(res));\n  }\n  useEffect(fetchFoodsIngredients, []);\n  return foodIngredients;\n};\n\nexport default useFetchFoodsIngredients;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ContextRecipes from '../context/ContextRecipes';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport useFetchFoodsIngredients from '../Hooks/fetchFoodIngredients';\n\nfunction IngredientesComidas() {\n  IngredientesComidas.displayName = 'Explorar Ingredientes: Comidas';\n  const DOZE = 12;\n  const history = useHistory();\n  const { foodIngredients, setCurrentValueFood } = useContext(ContextRecipes);\n  useFetchFoodsIngredients();\n\n  const loadingFunc = () => (<div>..Loading...</div>);\n  const dataRender = () => {\n    const foodIngredientsAUX = { ...foodIngredients };\n    const { meals } = foodIngredientsAUX;\n    return (\n      <div className=\"explorer-container mb-5 pb-5\">\n        { meals && meals.slice(0, DOZE).map((ingredient, index) => (\n          <button\n            className=\"ingredients-button-app m-1 pb-5\"\n            type=\"button\"\n            data-testid={ `${index}-ingredient-card` }\n            key={ index }\n            onClick={ () => {\n              setCurrentValueFood(ingredient.strIngredient);\n              history.push('/comidas');\n            } }\n          >\n            <p\n              data-testid={ `${index}-card-name` }\n            >\n              {ingredient.strIngredient}\n            </p>\n            <img\n              className=\"explorer-img-app\"\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png` }\n              alt={ ingredient.strIngredient }\n            />\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header title={ IngredientesComidas.displayName } />\n      <div>\n        {!foodIngredients ? loadingFunc() : dataRender()}\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default IngredientesComidas;\n","import { useContext, useEffect } from 'react';\nimport ContextRecipes from '../context/ContextRecipes';\n\nconst useFetchDrinksIngredients = () => {\n  const { drinkIngredients, setDrinkIngredients } = useContext(ContextRecipes);\n\n  function fetchDrinksIngredients() {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\n      .then((res) => res.json())\n      .then((res) => setDrinkIngredients(res));\n  }\n  useEffect(fetchDrinksIngredients, []);\n  return drinkIngredients;\n};\n\nexport default useFetchDrinksIngredients;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ContextRecipes from '../context/ContextRecipes';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport useFetchDrinksIngredients from '../Hooks/fetchDrinkIngredients';\n\nfunction IngredientesBebidas() {\n  IngredientesBebidas.displayName = 'Explorar Ingredientes: Bebidas';\n  const DOZE = 12;\n  const history = useHistory();\n  const { drinkIngredients, setCurrentValueDrink } = useContext(ContextRecipes);\n  useFetchDrinksIngredients();\n\n  const loadingFunc = () => (<div>..Loading...</div>);\n  const dataRender = () => {\n    const drinkIngredientsAUX = { ...drinkIngredients };\n    const { drinks } = drinkIngredientsAUX;\n    return (\n      <div className=\"explorer-container mb-5 pb-5\">\n        { drinks && drinks.slice(0, DOZE).map((ingredient, index) => (\n          <button\n            className=\"ingredients-button-app m-1 pb-5\"\n            type=\"button\"\n            data-testid={ `${index}-ingredient-card` }\n            key={ index }\n            onClick={ () => {\n              setCurrentValueDrink(ingredient.strIngredient1);\n              history.push('/bebidas');\n            } }\n          >\n            <img\n              className=\"explorer-img-app\"\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}-Small.png` }\n              alt={ ingredient.strIngredient1 }\n            />\n            <p data-testid={ `${index}-card-name` }>{ingredient.strIngredient1}</p>\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header title={ IngredientesBebidas.displayName } />\n      <div>\n        {!drinkIngredients ? loadingFunc() : dataRender()}\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default IngredientesBebidas;\n","const verifyIngredient = (ingredient, loadInProgressRecipes, id, type) => {\n  if (loadInProgressRecipes !== null\n    && loadInProgressRecipes[type] !== undefined\n      && loadInProgressRecipes[type][id]) {\n    return loadInProgressRecipes[type][id].includes(ingredient);\n  }\n  return false;\n};\n\nexport default verifyIngredient;\n","import React, { useContext, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport ContextRecipes from '../context/ContextRecipes';\nimport useFetchIdAndRecomendations from '../Hooks/fetchDetailsAndRecomendations';\nimport shareIcon from '../images/shareIcon.svg';\nimport FavoriteDrink from '../components/FavoriteDrink';\nimport './detalhes.css';\nimport verifyIngredient from '../Helpers/verifyIngredient';\nimport Loading from '../components/Loading';\n\nfunction InProgressBebida() {\n  const history = useHistory();\n  const { id } = useParams();\n  const [shared, setShared] = useState('escondido');\n  const [canFinalize, setCanFinalize] = useState(true);\n  const { drinkDetails,\n    loadInProgressRecipes,\n  } = useContext(ContextRecipes);\n\n  useFetchIdAndRecomendations(id, 'drinks');\n\n  const isDisabled = () => {\n    const allCheckBoxes = document.getElementsByClassName('thought');\n    const allCheckBoxesArray = [...allCheckBoxes];\n    const result = allCheckBoxesArray.every((el) => el.checked === true);\n    setCanFinalize(!result);\n  };\n\n  const handleChange = (event) => {\n    if (event.target.checked) {\n      if (localStorage.getItem('inProgressRecipes')) {\n        const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        if (inProgressRecipes.cocktails && inProgressRecipes.cocktails[id]) {\n          const inProgressRecipesToSave = {\n            ...inProgressRecipes,\n            cocktails: {\n              [id]: [...inProgressRecipes.cocktails[id], event.target.name],\n            },\n          };\n          localStorage\n            .setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n        } else {\n          const inProgressRecipesToSave = {\n            ...inProgressRecipes,\n            cocktails: {\n              [id]: [event.target.name],\n            },\n          };\n          localStorage\n            .setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n        }\n      } else {\n        const inProgressRecipesToSave = {\n          cocktails: {\n            [id]: [event.target.name],\n          },\n        };\n        localStorage\n          .setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n      }\n    } else {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientsDone = inProgressRecipes.cocktails[id];\n      const removindIngredient = ingredientsDone\n        .filter((ingredient) => ingredient !== event.target.name);\n      const inProgressRecipesToSave = {\n        ...inProgressRecipes,\n        cocktails: {\n          [id]: removindIngredient,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n    }\n    isDisabled();\n  };\n\n  const ingredientsList = () => {\n    const MAX_INGREDIENTS = 15;\n    const ingredients = [];\n    const measures = [];\n    for (let index = 1; index <= MAX_INGREDIENTS; index += 1) {\n      const ingredient = `strIngredient${index}`;\n      const measure = `strMeasure${index}`;\n      ingredients.push(drinkDetails.drinks[0][ingredient]);\n      measures.push(drinkDetails.drinks[0][measure]);\n    }\n    const ingredientsFiltered = ingredients\n      .filter((ingredient) => (ingredient !== '' && ingredient !== null));\n\n    return (\n      <div>\n        { ingredientsFiltered.map((ingredient, index) => (\n          (\n            <p key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n              <div data-testid={ `${index}-ingredient-step` }>\n                <input\n                  className=\"thought\"\n                  id={ `ingredient-${index}` }\n                  type=\"checkbox\"\n                  value={ ingredient }\n                  name={ ingredient }\n                  defaultChecked={\n                    verifyIngredient(ingredient, loadInProgressRecipes, id, 'cocktails')\n                  }\n                  onChange={ (event) => handleChange(event) }\n                />\n                <label htmlFor={ `ingredient-${index}` } className=\"finish\">\n                  {' '}\n                  {ingredient}\n                  {' '}\n                  {measures[index]}\n                  {' '}\n                </label>\n              </div>\n            </p>)\n        ))}\n      </div>\n    );\n  };\n\n  const sharing = () => {\n    const numberOfCharactersToRemove = '/in-progress'.length;\n    const url = window.location.href;\n    const link = url.substring(0, url.length - numberOfCharactersToRemove);\n    copy(link);\n    setShared('aparente');\n  };\n\n  const finalize = () => {\n    const finalizedRecipe = {\n      id: drinkDetails.drinks[0].idDrink,\n      type: 'bebida',\n      area: '',\n      category: drinkDetails.drinks[0].strCategory,\n      alcoholicOrNot: drinkDetails.drinks[0].strAlcoholic,\n      name: drinkDetails.drinks[0].strDrink,\n      image: drinkDetails.drinks[0].strDrinkThumb,\n      doneDate: new Date(),\n      tags: [drinkDetails.drinks[0].strTags],\n    };\n    if (localStorage.getItem('doneRecipes')) {\n      const recipesSaved = JSON.parse(localStorage.getItem('doneRecipes'));\n      recipesSaved.push(finalizedRecipe);\n      localStorage.setItem('doneRecipes', JSON.stringify(recipesSaved));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([finalizedRecipe]));\n    }\n    history.push('/receitas-feitas');\n  };\n\n  return (\n    <div>\n      { drinkDetails.drinks\n        ? (\n          <div>\n            <div className=\"img-details-container\">\n              <img\n                width=\"300em\"\n                src={ drinkDetails.drinks[0].strDrinkThumb }\n                alt={ drinkDetails.drinks[0].strDrink }\n                data-testid=\"recipe-photo\"\n              />\n            </div>\n            <h1 data-testid=\"recipe-title\">\n              {drinkDetails.drinks[0].strDrink}\n            </h1>\n            <h4 data-testid=\"recipe-category\">\n              { drinkDetails.drinks[0].strCategory }\n            </h4>\n            <h5>\n              {drinkDetails.drinks[0].strAlcoholic}\n            </h5>\n            <div className=\"button-details-app\">\n              <div>\n                <button type=\"button\" onClick={ () => sharing() }>\n                  <img src={ shareIcon } alt=\"shareIcon\" data-testid=\"share-btn\" />\n                </button>\n                <p className={ shared }>Link copiado!</p>\n              </div>\n              <div>\n                <FavoriteDrink />\n              </div>\n            </div>\n            <div>\n              <h2>Ingredients</h2>\n              { ingredientsList() }\n            </div>\n            <h2>Instructions</h2>\n            <p className=\"mb-5\" data-testid=\"instructions\">\n              { drinkDetails.drinks[0].strInstructions }\n            </p>\n            <button\n              className=\"iniciarReceita\"\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ canFinalize }\n              onClick={ () => finalize() }\n            >\n              Finish Recipe\n            </button>\n          </div>)\n        : <Loading /> }\n    </div>\n  );\n}\n\nexport default InProgressBebida;\n","import React, { useContext, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport ContextRecipes from '../context/ContextRecipes';\nimport useFetchIdAndRecomendations from '../Hooks/fetchDetailsAndRecomendations';\nimport shareIcon from '../images/shareIcon.svg';\nimport FavoriteFood from '../components/FavoriteFood';\nimport './detalhes.css';\nimport verifyIngredient from '../Helpers/verifyIngredient';\nimport Loading from '../components/Loading';\n\nfunction InProgressComida() {\n  const history = useHistory();\n  const { id } = useParams();\n  const [shared, setShared] = useState('escondido');\n  const [canFinalize, setCanFinalize] = useState(true);\n  const { foodDetails,\n    loadInProgressRecipes,\n  } = useContext(ContextRecipes);\n\n  useFetchIdAndRecomendations(id, 'foods');\n\n  const isDisabled = () => {\n    const allCheckBoxes = document.getElementsByClassName('thought');\n    const allCheckBoxesArray = [...allCheckBoxes];\n    const result = allCheckBoxesArray.every((el) => el.checked === true);\n    setCanFinalize(!result);\n  };\n\n  const handleChange = (event) => {\n    if (event.target.checked) {\n      if (localStorage.getItem('inProgressRecipes')) {\n        const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        if (inProgressRecipes.meals && inProgressRecipes.meals[id]) {\n          const inProgressRecipesToSave = {\n            ...inProgressRecipes,\n            meals: {\n              [id]: [...inProgressRecipes.meals[id], event.target.name],\n            },\n          };\n          localStorage\n            .setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n        } else {\n          const inProgressRecipesToSave = {\n            ...inProgressRecipes,\n            meals: {\n              [id]: [event.target.name],\n            },\n          };\n          localStorage\n            .setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n        }\n      } else {\n        const inProgressRecipesToSave = {\n          meals: {\n            [id]: [event.target.name],\n          },\n        };\n        localStorage\n          .setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n      }\n    } else {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const ingredientsDone = inProgressRecipes.meals[id];\n      const removindIngredient = ingredientsDone\n        .filter((ingredient) => ingredient !== event.target.name);\n      const inProgressRecipesToSave = {\n        ...inProgressRecipes,\n        meals: {\n          [id]: removindIngredient,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipesToSave));\n    }\n    isDisabled();\n  };\n\n  const ingredientsList = () => {\n    const MAX_INGREDIENTS = 20;\n    const ingredients = [];\n    const measures = [];\n    for (let index = 1; index <= MAX_INGREDIENTS; index += 1) {\n      const ingredient = `strIngredient${index}`;\n      const measure = `strMeasure${index}`;\n      ingredients.push(foodDetails.meals[0][ingredient]);\n      measures.push(foodDetails.meals[0][measure]);\n    }\n    const ingredientsFiltered = ingredients\n      .filter((ingredient) => (ingredient !== '' && ingredient !== null));\n\n    return (\n      <div>\n        { ingredientsFiltered.map((ingredient, index) => (\n          (\n            <p key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n              <div className=\"form-check\" data-testid={ `${index}-ingredient-step` }>\n                <input\n                  className=\"thought form-check-input\"\n                  id={ `ingredient-${index}` }\n                  type=\"checkbox\"\n                  value={ ingredient }\n                  name={ ingredient }\n                  defaultChecked={\n                    verifyIngredient(ingredient, loadInProgressRecipes, id, 'meals')\n                  }\n                  onChange={ (event) => handleChange(event) }\n                />\n                <label htmlFor={ `ingredient-${index}` } className=\"finish form-check-label\">\n                  {' '}\n                  {ingredient}\n                  {' '}\n                  {measures[index]}\n                  {' '}\n                </label>\n              </div>\n            </p>)\n        ))}\n      </div>\n    );\n  };\n\n  const sharing = () => {\n    const numberOfCharactersToRemove = '/in-progress'.length;\n    const url = window.location.href;\n    const link = url.substring(0, url.length - numberOfCharactersToRemove);\n    copy(link);\n    setShared('aparente');\n  };\n\n  const finalize = () => {\n    const finalizedRecipe = {\n      id: foodDetails.meals[0].idMeal,\n      type: 'comida',\n      area: foodDetails.meals[0].strArea,\n      category: foodDetails.meals[0].strCategory,\n      alcoholicOrNot: '',\n      name: foodDetails.meals[0].strMeal,\n      image: foodDetails.meals[0].strMealThumb,\n      doneDate: new Date(),\n      tags: [foodDetails.meals[0].strTags],\n    };\n    if (localStorage.getItem('doneRecipes')) {\n      const recipesSaved = JSON.parse(localStorage.getItem('doneRecipes'));\n      recipesSaved.push(finalizedRecipe);\n      localStorage.setItem('doneRecipes', JSON.stringify(recipesSaved));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([finalizedRecipe]));\n    }\n    history.push('/receitas-feitas');\n  };\n\n  return (\n    <div>\n      { foodDetails.meals\n        ? (\n          <div>\n            <h1 data-testid=\"recipe-title\">\n              {foodDetails.meals[0].strMeal}\n            </h1>\n            <div className=\"img-details-container\">\n              <img\n                width=\"300em\"\n                src={ foodDetails.meals[0].strMealThumb }\n                alt={ foodDetails.meals[0].strMeal }\n                data-testid=\"recipe-photo\"\n              />\n            </div>\n            <h4 data-testid=\"recipe-category\">\n              { foodDetails.meals[0].strCategory }\n            </h4>\n            <h5>\n              {foodDetails.meals[0].strTags}\n            </h5>\n            <div className=\"button-details-app\">\n              <div>\n                <button type=\"button\" onClick={ () => sharing() }>\n                  <img src={ shareIcon } alt=\"shareIcon\" data-testid=\"share-btn\" />\n                </button>\n                <p className={ shared }>Link copiado!</p>\n              </div>\n              <div>\n                <FavoriteFood />\n              </div>\n            </div>\n            <div>\n              <h2 className=\"ingredientes-title\"> Ingredients </h2>\n              { ingredientsList() }\n            </div>\n            <h2 className=\"ingredientes-title\">Instructions</h2>\n            <p className=\"instructions-details-app\" data-testid=\"instructions\">\n              { foodDetails.meals[0].strInstructions }\n            </p>\n            <button\n              className=\"iniciarReceita\"\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ canFinalize }\n              onClick={ () => finalize() }\n            >\n              Finish Recipe\n            </button>\n          </div>)\n        : <Loading />}\n    </div>\n  );\n}\n\nexport default InProgressComida;\n","import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction ReceitasFeitas() {\n  ReceitasFeitas.displayName = 'Receitas Feitas';\n  const [typeToRender, setTypeToRender] = useState('All');\n  const [shared, setShared] = useState('escondido');\n\n  const saveTypeToRender = (event) => {\n    const { value } = event.target;\n    if (value === 'All') setTypeToRender(value);\n    if (value === 'Food') setTypeToRender('comida');\n    if (value === 'Drinks') setTypeToRender('bebida');\n  };\n\n  const renderFilterButtons = () => {\n    const buttons = ['All', 'Food', 'Drinks'];\n    const dataTest = ['filter-by-all-btn', 'filter-by-food-btn', 'filter-by-drink-btn'];\n    return (\n      // temos abaixo classesbootstrap\n      <div>\n        {buttons.map((button, index) => (\n          <Button\n            className=\"btn btn-dark btn-sm m-3 p-3\"\n            type=\"button\"\n            key={ index }\n            value={ button }\n            data-testid={ dataTest[index] }\n            onClick={ (event) => saveTypeToRender(event) }\n          >\n            {button}\n          </Button>\n        ))}\n      </div>);\n  };\n\n  const sharing = (type, id) => {\n    const numberOfCharactersToRemove = '/receitas-feitas'.length;\n    const url = window.location.href;\n    let link = url.substring(0, url.length - numberOfCharactersToRemove);\n    if (type === 'comida') {\n      link += `/comidas/${id}`;\n    }\n    if (type === 'bebida') {\n      link += `/bebidas/${id}`;\n    }\n    copy(link);\n    setShared('aparente');\n  };\n\n  const doneRecipesExists = (recipesToRender) => {\n    const alterURL = {\n      comida: 'comidas',\n      bebida: 'bebidas',\n    };\n    return (\n      <div>\n        {recipesToRender && recipesToRender.map((recipe, index) => (\n          <div key={ recipe.id }>\n            <Link\n              to={ `/${alterURL[recipe.type]}/${recipe.id}` }\n            >\n              <div className=\"img-details-container\">\n                <img\n                  width=\"300em\"\n                  src={ recipe.image }\n                  alt={ recipe.name }\n                  data-testid={ `${index}-horizontal-image` }\n                />\n              </div>\n            </Link>\n            {recipe.type === 'comida'\n              ? (\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {`${recipe.area} - ${recipe.category}`}\n                </p>)\n              : (\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {`${recipe.alcoholicOrNot}`}\n                </p>)}\n            <button type=\"button\" onClick={ () => sharing(recipe.type, recipe.id) }>\n              <img\n                src={ shareIcon }\n                alt=\"shareIcon\"\n                data-testid={ `${index}-horizontal-share-btn` }\n              />\n            </button>\n            <p className={ shared }>Link copiado!</p>\n            <Link\n              to={ `/${alterURL[recipe.type]}/${recipe.id}` }\n              data-testid={ `${index}-horizontal-name` }\n            >\n              {recipe.name}\n            </Link>\n            <p data-testid={ `${index}-horizontal-done-date` }>{recipe.doneDate}</p>\n            <p>\n              {recipe.tags && recipe.tags.map((tag, indexIn) => (\n                <div\n                  key={ indexIn }\n                  data-testid={ `${index}-${tag}-horizontal-tag` }\n                >\n                  {tag}\n                </div>\n              ))}\n\n            </p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDoneRecipes = () => {\n    if (localStorage.getItem('doneRecipes')) {\n      const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n      let recipesToRender = doneRecipes;\n      console.log(recipesToRender);\n      if (typeToRender !== 'All') {\n        recipesToRender = doneRecipes.filter((recipe) => recipe.type === typeToRender);\n      }\n      return (\n        <div>\n          { recipesToRender ? doneRecipesExists(recipesToRender) : <h1>Carregando</h1> }\n        </div>);\n    }\n    return (\n      <div>\n        <h2>Não há receitas Feitas</h2>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <header>\n        <Header title={ ReceitasFeitas.displayName } />\n      </header>\n      <body>\n        { renderFilterButtons() }\n        { renderDoneRecipes() }\n      </body>\n    </div>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction ReceitasFavoritas() {\n  const [typeToRender, setTypeToRender] = useState('All');\n  const [reload, setReaload] = useState(true);\n  const [shared, setShared] = useState('escondido');\n\n  const saveTypeToRender = (event) => {\n    const { value } = event.target;\n    if (value === 'All') setTypeToRender(value);\n    if (value === 'Food') setTypeToRender('comida');\n    if (value === 'Drinks') setTypeToRender('bebida');\n  };\n  const disfavor = (type, id) => {\n    const myFavoritesRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavorites = myFavoritesRecipes.filter((favoriteRecipes) => favoriteRecipes\n      .id !== id && favoriteRecipes.type !== type);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    setReaload(!reload);\n  };\n\n  const sharing = (type, id) => {\n    const numberOfCharactersToRemove = '/receitas-favoritas'.length;\n    const url = window.location.href;\n    let link = url.substring(0, url.length - numberOfCharactersToRemove);\n    if (type === 'comida') {\n      link += `/comidas/${id}`;\n    }\n    if (type === 'bebida') {\n      link += `/bebidas/${id}`;\n    }\n    copy(link);\n    setShared('aparente');\n  };\n\n  const renderFavorites = () => {\n    const screen = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let screenFiltered = screen;\n    if (typeToRender !== 'All') {\n      screenFiltered = screen.filter((recipe) => recipe.type === typeToRender);\n    }\n    const alterURL = {\n      comida: 'comidas',\n      bebida: 'bebidas',\n    };\n    return (\n      <div>\n        {screenFiltered && screenFiltered.map((favoriteRecipes, index) => (\n          <div key={ favoriteRecipes.id }>\n            <Link to={ `/${alterURL[favoriteRecipes.type]}/${favoriteRecipes.id}` }>\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                width=\"200px\"\n                src={ favoriteRecipes.image }\n                alt={ favoriteRecipes.name }\n              />\n            </Link>\n            {favoriteRecipes.type === 'comida'\n              ? (\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {`${favoriteRecipes.area} - ${favoriteRecipes.category}`}\n                </p>)\n              : (\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {`${favoriteRecipes.alcoholicOrNot}`}\n                </p>)}\n            <Link to={ `/${alterURL[favoriteRecipes.type]}/${favoriteRecipes.id}` }>\n              <p data-testid={ `${index}-horizontal-name` }>{ favoriteRecipes.name }</p>\n            </Link>\n            <button\n              type=\"button\"\n              onClick={ () => sharing(favoriteRecipes.type, favoriteRecipes.id) }\n            >\n              <img\n                src={ shareIcon }\n                alt=\"shareIcon\"\n                data-testid={ `${index}-horizontal-share-btn` }\n              />\n            </button>\n            <p className={ shared }>Link copiado!</p>\n            <button\n              type=\"button\"\n              onClick={ () => disfavor(favoriteRecipes.type, favoriteRecipes.id) }\n            >\n              <img\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                src={ blackHeartIcon }\n                alt=\"favorite\"\n              />\n            </button>\n\n          </div>\n        )) }\n      </div>);\n  };\n\n  const renderFilterButtons = () => {\n    const buttons = ['All', 'Food', 'Drinks'];\n    const dataTest = ['filter-by-all-btn', 'filter-by-food-btn', 'filter-by-drink-btn'];\n    return (\n      <div>\n        {buttons.map((button, index) => (\n          <Button\n            className=\"btn btn-dark btn-sm m-3 p-3\"\n            type=\"button\"\n            key={ index }\n            value={ button }\n            data-testid={ dataTest[index] }\n            onClick={ (event) => saveTypeToRender(event) }\n          >\n            {button}\n          </Button>\n        ))}\n      </div>);\n  };\n\n  ReceitasFavoritas.displayName = 'Receitas Favoritas';\n  return (\n    <div>\n      <header>\n        <Header title={ ReceitasFavoritas.displayName } />\n      </header>\n      <body>\n        { renderFilterButtons() }\n        {renderFavorites()}\n\n      </body>\n    </div>\n  );\n}\n\nexport default ReceitasFavoritas;\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <h3>Page Not Found</h3>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Comidas, Bebidas, Login, Perfil, DetalhesComida,\n  DetalhesBebida, Explorar, ExplorarComidas, ExplorarBebidas, ExplorarOrigem,\n  IngredientesComidas, IngredientesBebidas, inProgressComida,\n  InProgressBebidas, ReceitasFeitas, ReceitasFavoritas, NotFound } from './pages/index';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ IngredientesBebidas } />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ IngredientesComidas } />\n      <Route path=\"/comidas/:id/in-progress\" component={ inProgressComida } />\n      <Route path=\"/bebidas/:id/in-progress\" component={ InProgressBebidas } />\n      <Route exact path=\"/explorar/comidas\" component={ ExplorarComidas } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExplorarBebidas } />\n      <Route exact path=\"/explorar/comidas/area\" component={ ExplorarOrigem } />\n      <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n      <Route exact path=\"/comidas/:id\" component={ DetalhesComida } />\n      <Route exact path=\"/bebidas/:id\" component={ DetalhesBebida } />\n      <Route exact path=\"/explorar\" component={ Explorar } />\n      <Route exact path=\"/comidas\" component={ Comidas } />\n      <Route exact path=\"/bebidas\" component={ Bebidas } />\n      <Route path=\"/perfil\" component={ Perfil } />\n      <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n      <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n      <Route exact path=\"/project-recipes-app/\" component={ Login } />\n\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport RecipesProvider from './context/RecipesProvider';\nimport App from './App';\n\nReactDOM.render(\n  <RecipesProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </RecipesProvider>, document.getElementById('root'),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}